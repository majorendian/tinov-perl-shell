head	0.0;
branch	0.0.13;
access;
symbols;
locks
	root:0.0.13.9; strict;
comment	@# @;


0.0
date	2021.08.31.19.47.17;	author root;	state Exp;
branches
	0.0.13.1;
next	;

0.0.13.1
date	2021.08.31.19.47.39;	author root;	state Exp;
branches;
next	0.0.13.3;

0.0.13.3
date	2021.08.31.20.30.03;	author root;	state Exp;
branches;
next	0.0.13.4;

0.0.13.4
date	2021.08.31.20.40.32;	author root;	state Exp;
branches;
next	0.0.13.5;

0.0.13.5
date	2021.08.31.20.41.51;	author root;	state Exp;
branches;
next	0.0.13.6;

0.0.13.6
date	2021.08.31.20.43.13;	author root;	state Exp;
branches;
next	0.0.13.7;

0.0.13.7
date	2021.08.31.20.45.39;	author root;	state Exp;
branches;
next	0.0.13.9;

0.0.13.9
date	2021.08.31.20.46.11;	author root;	state Exp;
branches;
next	;


desc
@Tinov Perl Shell
@


0.0
log
@*** empty log message ***
@
text
@#!/usr/bin/perl
use strict;
use warnings FATAL => qw(all);
use Data::Dumper;
use Term::ReadLine;

sub VER{
	my $V = '$Revision: 0.0.13.1 $';
	my ($m) = $V =~ m/Revision: (.+?) \$/;
	return "v$m";
}

BEGIN{
	push @@INC, "./";
	push @@INC, "./home/.tpsh/mod";
	push @@INC, "$ENV{HOME}/.tpsh/mod";
}
sub output(@@);
INIT{
	#aliases
	$::{r} = *run;
	$::{Q} = sub { exit $_[0] if $_[0]; exit 0; };
	$::{X} = $::{Q};
	$::{OK} = *dobre;
	$::{_print} = sub{ output @@_ };
}
use TPSH::Lang::SK;
use utf8;
print "TPSH " . VER() . "\n";
our $m = {}; #virtuálna pamät
our @@ts = ();
our %PRO = ();
our @@rec = ();
our $TERM = undef;

#Runtime configuration
our $RCONF = ".tpshrc";
our $PS1="t> ";

sub dobre(){return 1;};
sub T(){return 1};
sub F(){return 0};

sub output(@@){
	my $l = join "",@@_;
	my $o = $TERM->OUT;
	print $o $l;
}

sub mwr(&$){
	my $c = shift;
	my $name = shift;
	$::{$name} = $c;
}


sub loadrc {
	if($ENV{HOME}){
		my $rc = "$ENV{HOME}/$RCONF";
		-f $rc and require $rc;
	}
}

sub view_stack{ my $c = shift; $c //= 0; print join("\n", @@ts); }

sub destack{
	my $z = pop @@ts;
	eval $z;
}

sub slurp{
	open my $fh, "<", $_[0] or die "Failed to read $_[0]:$!\n";
	local $/ = undef; $_ = <$fh>;
	close $fh && return $_;
}

sub rem(&$){ 
	my ($c, $p) = @@_;
	ref($c) eq "CODE" and $m->{$p} = $c;
}
sub pam{
	my @@keys = keys %$m;
	for(@@keys){
		print $_, "\n";
	}
}

sub rec{
	print "Command recording started\n";
	@@rec = () if @@rec > 0;
	$PRO{_rec} = T;
}
sub stoprec{
	print "Command recording stopped\n";
	$PRO{_rec} = F;
}

sub writefile($$){
	my ($fname, $data) = @@_;
	open my $fh, ">", $fname or die "Failed to open file $fname for writting.\n";
	print $fh $data;
	close $fh;
}

sub writerec{
	my $fname = shift;
	output "Usage: writerec <file>\n" and return unless $fname;
	shift @@rec;
	writefile $fname, join"\n",@@rec;
	output "Clearing \@@rec array\n";
	@@rec = ();
}
	
sub run(*@@){
	my $cmd = join "", @@_;
	print qx/$cmd/;
}

sub tu{ print $ENV{PWD} . "\n"; }
sub pros{print $ENV{shift()} . "\n"; }
sub smrt{die join"",@@_;};
sub ram{ print slurp("/proc/meminfo") . "\n"; }
sub zpis{ open my $c,">",shift or return 0; for(@@ts){print $c $_;}}
sub view{ print slurp(shift); }
sub zp($){ chdir shift; }
sub _tpsh_main{
	my $term = Term::ReadLine->new("Tinov Perl Shell");
	print "Using ReadLine: " . $term->ReadLine . "\n";
	$TERM = $term;
	my $out = $term->OUT;
	my $in = $term->IN;
	while(T){ 
		$_ = $term->readline($PS1);
		eval $_ . ";";
		if($@@){
			my ($m) = $@@ =~ m/Bareword "(.+?)"/;
			if($m){
				run $m;
			}else{
				$@@ =~ s/ at \(eval.*?\).*?$//;
				print $out "\$\@@: " . $@@ if $@@;
			}
		}
		print $out "\$\!: " . $! . "\n" if $!;
		chomp $_;
		$term->addhistory($_);
		push @@ts, $_;
		push @@rec, $_ if $PRO{_rec};
	} 
}
loadrc;
_tpsh_main;
@


0.0.13.1
log
@*** empty log message ***
@
text
@d8 1
a8 1
	my $V = '$Revision: 0.0 $';
@


0.0.13.3
log
@Fix revision number
@
text
@d8 1
a8 1
	my $V = '$Revision: 0.0.13.1 $';
@


0.0.13.4
log
@*** empty log message ***
@
text
@d8 1
a8 1
	my $V = '$Revision: 0.0.13.3 $';
@


0.0.13.5
log
@*** empty log message ***
@
text
@d8 1
a8 1
	my $V = '$Revision: 0.0.13.4 $';
@


0.0.13.6
log
@*** empty log message ***
@
text
@d8 1
a8 1
	my $V = '$Revision: 0.0.13.5 $';
@


0.0.13.7
log
@*** empty log message ***
@
text
@d8 1
a8 1
	my $V = '$Revision: 0.0.13.6 $';
@


0.0.13.9
log
@*** empty log message ***
@
text
@d8 1
a8 1
	my $V = '$Revision: 0.0.13.7 $';
@
